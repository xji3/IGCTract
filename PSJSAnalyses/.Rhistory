row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
pairs()
pairlist()
filtered.pairs
gradient.file <- paste("PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.file
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
View(gradient.list)
colSums(gradient.list)
sum(gradient.list[,1])
sum(gradient.list[,2])
filtered.pairs
pair = filtered.pairs[1]
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
colSums(gradient.list)
gradient.file
pair = filtered.pairs[2]
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
colSums(gradient.list)
gradient.file
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
}
Godambe.matrix
a = read.table("./log/PSJS_HKY_YLR406C_YDL075W_One_rate_Guess_1_rv_SCOK_nonclock_log.txt")
a
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
}
colSums(gradient.list)
Godambe.matrix
pair
View(PSJS.HKY.rv.nonclock.summary.guess.1)
PSJS.HKY.rv.nonclock.summary.guess.1[,pair]
PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair]
cat("Now get Godambe matrix for pair: ", pair)
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair])
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair)
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair])
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix for ", pair, " = ", Godambe.matrix)
}
cat("Godambe matrix for ", pair, " = ", as.list(Godambe.matrix))
cat("Godambe matrix for ", pair, " = ", print.listof(Godambe.matrix))
cat("Godambe matrix for ", pair, " = ", as.list(Godambe.matrix))
paste(Godambe.matrix)
cat("Godambe matrix for ", pair, " = ", paste(Godambe.matrix))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair)
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair])
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix for ", pair, " = ", paste(Godambe.matrix))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair， "\n")
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix for ", pair, " = ", paste(Godambe.matrix), "\n")
}
dim(gradient.list)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
# read in Gradient list
Godambe.guess.1 <- NULL
Godambe.guess.2 <- NULL
for (pair in filtered.pairs){
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_1_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix for ", pair, " = ", paste(Godambe.matrix), "\n")
Godambe.guess.1 <- cbind(Godambe.guess.1, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
gradient.file <- paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_gradient.txt", sep = "")
gradient.list <- read.table(gradient.file)
cat("Now get Godambe matrix for pair: ", pair, "\n")
cat("Verify gradient ~ 0 first: ", colSums(gradient.list), ". Gradient/Objective = ", colSums(gradient.list)/PSJS.HKY.rv.nonclock.summary.guess.1["ll",pair], "\n")
Godambe.matrix <- read.table(paste("./summary/PSJS_HKY_", pair, "_One_rate_Guess_2_rv_SCOK_nonclock_godambe.txt", sep = ""))
cat("Godambe matrix for ", pair, " = ", paste(Godambe.matrix), "\n")
Godambe.guess.2 <- cbind(Godambe.guess.2, c(solve(Godambe.matrix)/dim(gradient.list)[1]))
}
View(Godambe.guess.1)
View(Godambe.guess.2)
Godambe.matrix
solve(Godambe.matrix)/dim(gradient.list)[1]
View(PSJS.HKY.rv.nonclock.summary.dim.1)
rownames(Godambe.guess.1) <- c("Tau", "Tau.logit", "logit.Tau", "logit")
rownames(Godambe.guess.2) <- c("Tau", "Tau.logit", "logit.Tau", "logit")
colnames(Godambe.guess.1) <- filtered.pairs
colnames(Godambe.guess.2) <- filtered.pairs
View(Godambe.guess.1)
log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]/PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair])
qnorm(0.975)
log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]/PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) + 1.96*sqrt(Godambe.guess.1[1, pair])
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]/PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) + 1.96*sqrt(Godambe.guess.1[1, pair]))
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]/PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]
log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair])
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) + 1.96*sqrt(Godambe.guess.1[1, pair]))
1.96*sqrt(Godambe.guess.1[1, pair]
)
log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair])
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) + 1.96*sqrt(Godambe.guess.1[1, pair]))/(1.0 + sum(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), pair]))
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]/(1.0 + sum(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), pair]))
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) - 1.96*sqrt(Godambe.guess.1[1, pair]))/(1.0 + sum(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), pair]))
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 /exp(1.96*sqrt(Godambe.guess.1[1, pair])) / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ]))
pair
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", pair]*PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", pair]) - 1.96*sqrt(Godambe.guess.1[1, pair]))/(1.0 + sum(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), pair]))*3
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 /exp(1.96*sqrt(Godambe.guess.1[1, pair])) / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 *exp(1.96*sqrt(Godambe.guess.1[1, pair])) / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 /exp(1.96*sqrt(Godambe.guess.2[1, pair])) / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 *exp(1.96*sqrt(Godambe.guess.2[1, pair])) / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
colnames(effective.tau) <- c("dim 1 tau", "All 1 tau", "All 1 tau -", "All 1 tau +",
"All 2 tau", "All 2 tau -", "All 2 tau +", "All 3 tau")
tract.length
lnL
effective.tau
for(i in 1:dim(lnL)[1]){
max.col <- which.min(lnL[i, 2:4]) + 1
cat(rownames(lnL)[i], max.col - 1, effective.tau[i, max.col], tract.length[i, max.col], "\n")
}
logit(.2)
exp(-log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)-1.96*sqrt(Godambe.guess.1[4,]))+1.0
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]
-log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)
-log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)-1.96*sqrt(Godambe.guess.1[4,])
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)-1.96*sqrt(Godambe.guess.1[4,]))+1.0
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)+1.96*sqrt(Godambe.guess.1[4,]))+1.0
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)-1.96*sqrt(Godambe.guess.1[4,]))+1.0,
exp(log(PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ]-1.0)+1.96*sqrt(Godambe.guess.1[4,]))+1.0,
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
exp(log(PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ]-1.0)-1.96*sqrt(Godambe.guess.2[4,]))+1.0,
exp(log(PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ]-1.0)+1.96*sqrt(Godambe.guess.2[4,]))+1.0,
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 1 -", "All 1 +",
"All 2 est", "All 2 -",  "All 2 +", "All 3 est")
tract.length
