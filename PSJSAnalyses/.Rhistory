PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ])
colnames(tract.length) <- c("dim 1", "All 1", "All 2")
tract.length
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ])
colnames(lnL)  <- c("dim 1", "All 1", "All 2")
lnL
cbind(tract.length, lnL)
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ])
colnames(tract.length) <- c("dim 1 estimate", "All 1 estimate", "All 2 estimate")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL")
cbind(tract.length, lnL)
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL")
cbind(tract.length, lnL)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/SimulationStudy/")
#setwd("/Users/Xiang/GitFolders/YeastIGCTract/SimulationStudy/")
Tract.list <- c(50.0)
guess.list <- c(50.0, 100.0, 250.0, 500.0)
# Now read in PSJS summary results
for(tract in Tract.list){
for(guess in guess.list){
PSJS.tract.summary <- NULL
for(sim in 1:100){
PSJS.summary <- paste("./summary/Tract_", toString(tract), '.0_HKY/sim_',
toString(sim), '/True_PSJS_HKY_rv_sim_',
toString(sim), "_Tract_", toString(tract), '.0_guess_',
toString(guess),'.0_nt_summary.txt', sep = "")
if (file.exists(PSJS.summary)){
all <- readLines(PSJS.summary, n = -1)
col.names <- paste("sim_", toString(sim), sep = "")
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(PSJS.summary,
row.names = row.names,
col.names = col.names))
PSJS.tract.summary <- cbind(PSJS.tract.summary, summary_mat)
}
}
assign(paste("True_PSJS_HKY_Tract_", toString(tract), "_guess_",
toString(guess), "_summary", sep = ""), PSJS.tract.summary)
}
}
# Now combine all initial guess results
for(tract in Tract.list){
combined.PSJS.tract.summary <- NULL
col.list <- NULL
for ( sim_num in 1:100){
sim_col <- paste("sim_", toString(sim_num), sep = "")
best.lnL <- -Inf
best.guess <- NULL
for(guess in guess.list){
target_summary <- get(paste("True_PSJS_HKY_Tract_", toString(tract), "_guess_", toString(guess), "_summary", sep = ""))
if(sim_col %in% colnames(target_summary) ){
if (target_summary["ll", sim_col] > best.lnL){
best.lnL <- target_summary["ll", sim_col]
best.guess <- guess
}
}
}
if(! is.null(best.guess)){
combined.PSJS.tract.summary <- cbind(combined.PSJS.tract.summary,
get(paste("True_PSJS_HKY_Tract_", toString(tract), "_guess_", toString(best.guess), "_summary", sep = ""))[, sim_col])
col.list <- c(col.list, sim_col)
}
}
colnames(combined.PSJS.tract.summary) <- col.list
assign(paste("True_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""), combined.PSJS.tract.summary)
}
True_PSJS_HKY_Tract_50_combined_summary
True_PSJS_HKY_Tract_50_combined_summary["tract_length", ]
mean(True_PSJS_HKY_Tract_50_combined_summary["tract_length", ])
Tract.list <- c(50.0)
for(tract in Tract.list){
target_summary <- get(paste("True_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
#abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
}
Tract.list <- c(50.0)
for(tract in Tract.list){
target_summary <- get(paste("True_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
#sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
#abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
}
cat("Mean: ", mean(target_summary["tract_length", col.names]), " Number of datasets: ", length(col.names))
Tract.list <- c(50.0)
for(tract in Tract.list){
target_summary <- get(paste("True_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
#sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
#abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
cat(" Number of datasets: ", length(col.names), "\n Mean: ", mean(target_summary["tract_length", col.names]),
"sd: ", sd(target_summary["tract_length", col.names]))
}
Tract.list <- c(50.0)
for(tract in Tract.list){
target_summary <- get(paste("True_PSJS_HKY_Tract_", toString(tract), "_combined_summary", sep = ""))
col.names <- target_summary["tract_length", ] < 10*tract
#sim_info <- get(paste("sim.tract.", toString(tract), sep = ""))
hist(target_summary["tract_length", col.names], breaks = 50,
main = paste("PSJS Estimated Tract length 1/p, Tract = ", toString(tract), ".0 ", sep = ""))
#abline(v =  realized.tract.dist(492, 1.0/tract)$mean, col = "blue")
abline(v =  tract, col = 2)
#abline(v =  mean(sim_info["mean subtract length", ]), col = "green")
cat(" Number of datasets: ", length(col.names), "True Tract: ", tract, "\n Mean: ", mean(target_summary["tract_length", col.names]),
"sd: ", sd(target_summary["tract_length", col.names]))
}
cat(" Number of datasets: ", length(col.names), ". True Tract: ", tract, "\n Mean: ", mean(target_summary["tract_length", col.names]),
"sd: ", sd(target_summary["tract_length", col.names]))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL")
tract.length
lnL
save.image("./PSJS_Summary.RData")
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
tract.length
lnL
save.image("./PSJS_Summary.RData")
View(PSJS.HKY.rv.nonclock.summary.guess.1)
effective.tau <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])))
effective.tau
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ])),
)
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
tract.length
lnL
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/PSJSAnalyses/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
# Now read in individual summary of gene pairs
PSJS.HKY.rv.nonclock.summary.guess.1 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.2 <- NULL
PSJS.HKY.rv.nonclock.summary.guess.3 <- NULL
PSJS.HKY.rv.nonclock.summary.dim.1 <- NULL
for (pair in filtered.pairs){
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_1_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.1 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.1, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_2_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.2 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.2, summary_mat)
summary.file.name <- paste("PSJS_HKY", pair, "One_rate_Guess_3_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.guess.3 <- cbind(PSJS.HKY.rv.nonclock.summary.guess.3, summary_mat)
summary.file.name <- paste("PSJS_dim_1_HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
all <- readLines(summary_file, n = -1)
col.names <- pair
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
PSJS.HKY.rv.nonclock.summary.dim.1 <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1, summary_mat)
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
colnames(effective.tau) <- c("dim 1 tau", "All 1 tau", "All 2 tau", "All 3 tau")
tract.length
lnL
effective.tau
save.image("./PSJS_Summary.RData")
mean(c(12.752635 , 13.065172,  13.047770))
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
colnames(effective.tau) <- c("dim 1 tau", "All 1 tau", "All 2 tau", "All 3 tau")
tract.length
lnL
effective.tau
for(i in 1:dim(lnL)[1]){
max.col <- which.max(lnL[i, ])
cat(rownames(lnL)[i], lnL[i, max.col], tract.length[i, max.col], effective.tau[i, max.col])
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
colnames(effective.tau) <- c("dim 1 tau", "All 1 tau", "All 2 tau", "All 3 tau")
tract.length
lnL
effective.tau
for(i in 1:dim(lnL)[1]){
max.col <- which.max(lnL[i, 2:4])
cat(rownames(lnL)[i], lnL[i, max.col], tract.length[i, max.col], effective.tau[i, max.col], "\n")
}
tract.length <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ],
PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ])
colnames(tract.length) <- c("dim 1 est", "All 1 est", "All 2 est", "All 3 est")
lnL <- cbind(PSJS.HKY.rv.nonclock.summary.dim.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.1["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.2["ll", ],
PSJS.HKY.rv.nonclock.summary.guess.3["ll", ])
colnames(lnL)  <- c("dim 1 lnL", "All 1 lnL", "All 2 lnL", "All 3 lnL")
effective.tau <- cbind(
PSJS.HKY.rv.nonclock.summary.dim.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.dim.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.dim.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.1["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.1["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.1[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.2["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.2["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.2[c("r2", "r3"), ])),
PSJS.HKY.rv.nonclock.summary.guess.3["init_rate", ] * PSJS.HKY.rv.nonclock.summary.guess.3["tract_length", ] * 3 / (1.0 + colSums(PSJS.HKY.rv.nonclock.summary.guess.3[c("r2", "r3"), ]))
)
colnames(effective.tau) <- c("dim 1 tau", "All 1 tau", "All 2 tau", "All 3 tau")
tract.length
lnL
effective.tau
for(i in 1:dim(lnL)[1]){
max.col <- which.max(lnL[i, 2:4]) + 1
cat(rownames(lnL)[i], max.col - 1, effective.tau[i, max.col], tract.length[i, max.col], "\n")
}
which.max(lnL[i, 2:4])
which.max(lnL[i, 2:4])+1
