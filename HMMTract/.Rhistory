seq.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_input.fasta", sep = "")
ctl.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_codeml.ctl", sep = "")
out.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_codeml_result.txt", sep = "")
same.ctl <- c("noisy = 9", "verbose = 1", "runmode = 0", "seqtype = 1",
"CodonFreq = 4", "estFreq = 1", "ndata = 1", "clock = 0",
"aaDist = 0", "model = 0", "NSsites = 0", "icode = 0",
"Mgene = 0", "fix_kappa = 1",
paste("kappa = ", toString(Force_MG94_nonclock_summary[7, pair]), sep = ""),
"fix_omega = 1",
paste("omega = ", toString(Force_MG94_nonclock_summary[8, pair]), sep = ""),
"fix_alpha = 1", "alpha = 0", "Malpha = 0", "ncatG = 5", "getSE = 1",
"RateAncestor = 0", "Small_Diff = 5e-7", "cleandata = 0", "fix_blength = 2",
"method = 0"
)
ctl.file.handle <- file(ctl.file)
writeLines(c(paste("seqfile = ", seq.file, sep = ""),
paste("treefile = ", tree.file.output, sep = ""),
paste("outfile =", out.file, sep = ""),
same.ctl), ctl.file.handle)
close(ctl.file.handle)
# Ouput IGC MLE tree
line.1 <- "13     2"
line.2.pair1 <- paste("(((((cerevisiae", paralog[1], ":", toString(MG94_nonclock_summary[20, pair]),
",paradoxus", paralog[1], ":", toString(MG94_nonclock_summary[21, pair]),
"):", toString(MG94_nonclock_summary[18, pair]),
",mikatae", paralog[1],":", toString(MG94_nonclock_summary[19, pair]),
"):", toString(MG94_nonclock_summary[16, pair]),
",kudriavzevii", paralog[1], ":", toString(MG94_nonclock_summary[17, pair]),
"):", toString(MG94_nonclock_summary[14, pair]),
",bayanus", paralog[1], ":", toString(MG94_nonclock_summary[15, pair]),
"):", toString(MG94_nonclock_summary[12, pair]),
",castellii", paralog[1], ":", toString(MG94_nonclock_summary[13, pair]),
"):", toString(MG94_nonclock_summary[10, pair]),
sep = "")
line.2.pair2 <- gsub(paralog[1], paralog[2], line.2.pair1)
line.2 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.05*MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.95*MG94_nonclock_summary[11, pair]),
");", sep = "")
line.3 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.02*MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.98*MG94_nonclock_summary[11, pair]),
");", sep = "")
tree.file.output <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_MG94_nonclock_tree.tree", sep = "")
file.output.handle <- file(tree.file.output)
writeLines(c(line.1, "", line.2, "", line.3), file.output.handle)
close(file.output.handle)
}
paml.summary.file <- "/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/paml_summary.txt"
all <- readLines(paml.summary.file, n = -1)
col.names <- strsplit(all[1], ' ')[[1]][-1]
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
paml_mat <- as.matrix(read.table(paml.summary.file,
row.names = row.names,
col.names = col.names))
Force.lnL.compare <- cbind(paml_mat[2, ], Force_MG94_nonclock_summary["ll", filtered.pairs])
colnames(Force.lnL.compare) <- c("paml_lnL", "IGC_lnL tau = 0")
Force.lnL.compare
MG94_nonclock_summary["ll", ]
MG94_nonclock_summary["ll", "YER102W_YBL072C"]
MG94_nonclock_summary["tau", "YER102W_YBL072C"]
filtered.pairs
MG94_nonclock_summary["ll", filtered.pairs]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Code/")
finished.pairs <- readLines('../Filtered_pairs.txt')
read.summary.mat <- function(summary_file, col_names){
all <- readLines(summary_file, n = -1)
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col_names))
return (summary_mat)
}
for(dim in 1:2){
JS.HKY.nonclock.summary <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.nonclock.summary <- NULL
PSJS.HKY.rv.SCOK.nonclock.summary <- NULL
PSJS.HKY.rv.NOSC.nonclock.summary <- NULL
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.nonclock.summary <- cbind(JS.HKY.nonclock.summary, summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.nonclock.summary <- cbind(PSJS.HKY.nonclock.summary, summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.SCOK.nonclock.summary <- cbind(PSJS.HKY.rv.SCOK.nonclock.summary, summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.NOSC.nonclock.summary <- cbind(PSJS.HKY.rv.NOSC.nonclock.summary, summary_mat)
}
assign(paste("PSJS.HKY.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.nonclock.summary)
assign(paste("PSJS.HKY.rv.SCOK.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.SCOK.nonclock.summary)
assign(paste("PSJS.HKY.rv.NOSC.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.NOSC.nonclock.summary)
}
# Now read in lnL summary
for(dim in 1:2){
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_NOSC_nonclock_lnL", sep = "_"), summary_mat)
}
}
finished.pairs
PSJS.HKY.dim.1.nonclock.summary["tract_length"]
PSJS.HKY.dim.1.nonclock.summary["tract_length",]
PSJS.HKY.rv.SCOK.dim.1.nonclock.summary["tract_length", ]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
finished.pairs <- readLines('../Filtered_pairs.txt')
filtered.pairs <- readLines('../Filtered_pairs.txt')
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
filtered.pairs[1]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt"))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = ""))
}
lnL.ratio
View(lnL.ratio)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = ""))
plot(lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
}
plot(1:length(lnL.ratio), lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
length(lnL.ratio).
length(lnL.ratio)
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
plot(1:length(lnL.ratio), lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
length(lnL.ratio)
View(lnL.ratio)
size(lnL.ratio)
dim(lnL.ratio)
plot(lnL.ratio[, 1], main = paste(paralog, " HMM log posterior ratio"))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
line(1:dim(Viterbi.path)[1], Viterbi.path[, 1])
}
Viterbi.path
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1])
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
}
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
}
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
View(summary.mat)
View(summary.mat)
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length", "Pr(S_0)", "Pr(S_1)")
View(summary.mat)
summary.mat[paralog, ]
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
print(summary.mat[paralog, ])
# Chunk 1
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length", "Pr(S_0)", "Pr(S_1)")
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
print(summary.mat[paralog, ])
}
Viterbi.path
plot(Viterbi.path, type = "S")
plot(1:197,Viterbi.path, type = "S")
plot(Viterbi.path)
Viterbi.path
plot(Viterbi.path[, 1], type = "S")
plot(Viterbi.path[10:20, 1], type = "S")
# Chunk 1
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length",
"Pr(S_0)", "Pr(S_1)",
"df", "d^2f")
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
print(summary.mat[paralog, ])
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length",
"Pr(S_0)", "Pr(S_1)",
"df", "d^2f")
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
print(summary.mat[paralog, ])
plot(lnL.surface[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
}
lnL.surface
plot(lnL.surface[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
plot(-lnL.surface[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length",
"Pr(S_0)", "Pr(S_1)",
"df", "d^2f")
par(mfrow=c(1, 2))
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
plot(-lnL.surface[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
print(summary.mat[paralog, ])
}
# Chunk 1
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
# Now calculate standard deviation of lnP
lnP <- log(3.0 / summary.mat[, 3])
sd.lnP <- 1.0 / sqrt(-summary.mat[, 7])
low.cf <- exp(lnP - 1.96 * sd.lnP)
up.cf  <- exp(lnP + 1.96 * sd.lnP)
up.cf[up.cf > 1] <- 1.0
summary.mat <- cbind(summary.mat, 3.0 / up.cf, 3.0 / low.cf)
colnames(summary.mat) <- c("lnL", "max lnL", "tract length",
"Pr(S_0)", "Pr(S_1)",
"df", "d^2f", "c.i. tract length", "c.i tract length")
par(mfrow=c(1, 1))
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
IGC.sw.lnL <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
Force.sw.lnL <- as.vector(read.table(paste("./summary/Force_", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path", "emission lnL diff"),
lty = c(1, 2, 3), col = c("black", "blue", "red"))
print(summary.mat[paralog, ])
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
print(summary.mat[paralog, ])
}
paralog
paralog = "YER102W_YBL072C"
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "blue", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path", "emission lnL diff"),
lty = c(1, 2), col = c( "blue", "red"))
paralog = "YER102W_YBL072C"
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "blue", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "blue", "red"))
paralog = "YER102W_YBL072C"
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "black", "red"))
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
paralog = "YBR191W_YPL079W"
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "black", "red"))
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
paralog = "YBR191W_YPL079W"
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
IGC.sw.lnL <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
Force.sw.lnL <- as.vector(read.table(paste("./summary/Force_", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "black", "red"))
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "black", "red"))
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
summary.mat
# Chunk 1
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
# Now calculate standard deviation of lnP
lnP <- log(3.0 / summary.mat[, 3])
sd.lnP <- 1.0 / sqrt(-summary.mat[, 7])
low.cf <- exp(lnP - 1.96 * sd.lnP)
up.cf  <- exp(lnP + 1.96 * sd.lnP)
up.cf[up.cf > 1] <- 1.0
summary.mat <- cbind(summary.mat, 3.0 / up.cf, 3.0 / low.cf)
colnames(summary.mat) <- c("lnL", "max lnL", "tract length",
"Pr(S_0)", "Pr(S_1)",
"df", "d^2f", "c.i. tract length", "c.i tract length")
par(mfrow=c(1, 1))
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
IGC.sw.lnL <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
Force.sw.lnL <- as.vector(read.table(paste("./summary/Force_", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "blue")
lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path", "emission lnL diff"),
lty = c(1, 2, 3), col = c("black", "blue", "red"))
print(summary.mat[paralog, ])
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
print(summary.mat[paralog, ])
}
# plot one paralog
paralog = "YER102W_YBL072C"
paralog = "YBR191W_YPL079W"
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
lnL.surface <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_lnL_surface.txt", sep = "")))
IGC.sw.lnL <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
Force.sw.lnL <- as.vector(read.table(paste("./summary/Force_", paralog, "_MG94_nonclock_sw_lnL.txt", sep = "")))
plot(lnL.ratio[, 1], xlab = "codon number", ylab = "log values",
type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], type = "S", lty = 2, col = "red")
#lines(1:dim(IGC.sw.lnL)[1], IGC.sw.lnL[, 2] - Force.sw.lnL[, 2], type = "l", lty = 3, col = "red")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c( "black", "red"))
plot(-lnL.surface[, 1], xlab = "tract length in nucleotide", ylab= "lnL", type = "l", col = "black", lty = 1,
main = paste(paralog, " lnL surface"))
summary.mat
View(summary.mat)
summary.mat["YER074W_YIL069C", ]
summary.mat["YER074W_YIL069C", 9]
a = summary.mat["YER074W_YIL069C", 9]
a
a*100
a*10000
