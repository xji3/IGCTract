row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
paml_mat <- as.matrix(read.table(paml.summary.file,
row.names = row.names,
col.names = col.names))
#col.names <- colnames(HKY_nonclock_summary)
lnL.mat <- cbind(#colnames(Dir_gBGC_HKY_clock_summary),
Force_HKY_nonclock_summary[2, col.names],
HKY_nonclock_summary[2, col.names],
Dir_HKY_nonclock_summary[2, col.names],
gBGC_HKY_nonclock_summary[2, col.names],
Dir_gBGC_HKY_nonclock_summary[2, col.names],
Force_MG94_nonclock_summary[2, col.names],
MG94_nonclock_summary[2, col.names],
Dir_MG94_nonclock_summary[2, col.names],
gBGC_MG94_nonclock_summary[2, col.names],
Dir_gBGC_MG94_nonclock_summary[2, col.names],
Force_HKY_clock_summary[2, col.names],
HKY_clock_summary[2, col.names],
Dir_HKY_clock_summary[2, col.names],
gBGC_HKY_clock_summary[2, col.names],
Dir_gBGC_HKY_clock_summary[2, col.names],
Force_MG94_clock_summary[2, col.names],
MG94_clock_summary[2, col.names],
Dir_MG94_clock_summary[2, col.names],
gBGC_MG94_clock_summary[2, col.names],
Dir_gBGC_MG94_clock_summary[2, col.names],
# add paml results
paml_mat[1, col.names],
paml_mat[2, col.names],
paml_mat[5, col.names],
paml_mat[6, col.names]
)
col.names <- c(#"pairs",
"HKY Force nonclock", "HKY nonclock", "HKY Dir nonclock",
"HKY gBGC nonclock", "HKY gBGC Dir nonclock",
"MG94 Force nonclock", "MG94 nonclock", "MG94 Dir nonclock",
"MG94 gBGC nonclock", "MG94 gBGC Dir nonclock",
"HKY Force clock", "HKY clock", "HKY Dir clock",
"HKY gBGC clock", "HKY gBGC Dir clock",
"MG94 Force clock", "MG94 clock", "MG94 Dir clock",
"MG94 gBGC clock",
"MG94 gBGC Dir clock",
# add paml results
"MG94 codeml tree length",
"MG94 codeml lnL",
"HKY baseml tree length",
"HKY baseml lnL"
)
colnames(lnL.mat) <- col.names
#write.table(lnL.mat, paste( "/Users/xji3/MixedFromCluster/", "lnL_matrix", sep = ""))
#b <- read.table(paste( "/Users/xji3/MixedFromCluster/", "lnL_matrix", sep = ""))
# Chunk 8
summary.list <- c( "HKY_nonclock_hessian",
"Dir_HKY_nonclock_hessian",
"Dir_gBGC_HKY_nonclock_hessian",
"gBGC_HKY_nonclock_hessian",
"MG94_nonclock_hessian",
"Dir_MG94_nonclock_hessian",
"Dir_gBGC_MG94_nonclock_hessian",
"gBGC_MG94_nonclock_hessian"
)
path.hessian <- "/Users/xji3/FromClusterFolders/FromCluster06012015/NewPackageNewRun/"
#path.hessian <- "G:/Geneconv_copy/DataFiles/"
for (target.summary in summary.list){
summary_file <- paste(path.hessian, target.summary, '.txt', sep = '')
all <- readLines(summary_file, n = -1)
col.names <- strsplit(all[1], ' ')[[1]][-1]
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
assign(target.summary, summary_mat)
}
new.lnL.mat <- lnL.mat[lnL.mat[, "MG94 codeml tree length"] < 3.0, ]
filtered.pairs <- rownames(new.lnL.mat)
write.table(filtered.pairs, "/Users/xji3/Genconv_copy/NewClusterPackRun/Yeast14pairs")
# Chunk 9
library(matrixStats)
# install.packages("matrixStats")
# MG94 nonclock model
mean.MG94.nonclock <- rowMeans(MG94_nonclock_summary[22:33, filtered.pairs])
sd.MG94.nonclock <- rowSds(MG94_nonclock_summary[22:33, filtered.pairs])
# MG94 Dir nonclock model
mean.MG94.Dir.nonclock <- rowMeans(Dir_MG94_nonclock_summary[23:34, filtered.pairs])
sd.MG94.Dir.nonclock <- rowSds(Dir_MG94_nonclock_summary[23:34, filtered.pairs])
# MG94 gBGC Dir nonclock model
mean.MG94.Dir.gBGC.nonclock <- rowMeans(Dir_gBGC_MG94_nonclock_summary[24:35, filtered.pairs])
sd.MG94.Dir.gBGC.nonclock <- rowSds(Dir_gBGC_MG94_nonclock_summary[24:35, filtered.pairs])
x <- 1:12
x.label <- rownames(MG94_nonclock_summary)[22:33]
plot(x, mean.MG94.nonclock,
ylim = range(c(mean.MG94.nonclock - sd.MG94.nonclock, mean.MG94.nonclock + sd.MG94.nonclock)),
pch = 19, xlab = "edges", ylab = "posterior tau estimate", main = "MG94 nonclock")
arrows(x, mean.MG94.nonclock - sd.MG94.nonclock, x, mean.MG94.nonclock + sd.MG94.nonclock,
length = 0.05, angle = 90, code = 3)
text(x, mean.MG94.nonclock + 0.3, labels = x.label, cex = 0.7)
plot(x, mean.MG94.Dir.nonclock,
ylim = range(c(mean.MG94.Dir.nonclock - sd.MG94.Dir.nonclock, mean.MG94.Dir.nonclock + sd.MG94.Dir.nonclock)),
pch = 19, xlab = "edges", ylab = "posterior tau estimate", main = "MG94 Dir nonclock")
arrows(x, mean.MG94.Dir.nonclock - sd.MG94.Dir.nonclock, x, mean.MG94.Dir.nonclock + sd.MG94.Dir.nonclock,
length = 0.05, angle = 90, code = 3)
text(x, mean.MG94.Dir.nonclock + 0.3, labels = x.label, cex = 0.7)
plot(x, mean.MG94.Dir.gBGC.nonclock,
ylim = range(c(mean.MG94.Dir.gBGC.nonclock - sd.MG94.Dir.gBGC.nonclock, mean.MG94.Dir.gBGC.nonclock + sd.MG94.Dir.gBGC.nonclock)),
pch = 19, xlab = "edges", ylab = "posterior tau estimate", main = "MG94 Dir gBGC nonclock")
arrows(x, mean.MG94.Dir.gBGC.nonclock - sd.MG94.Dir.gBGC.nonclock, x, mean.MG94.Dir.gBGC.nonclock + sd.MG94.Dir.gBGC.nonclock,
length = 0.05, angle = 90, code = 3)
text(x, mean.MG94.Dir.gBGC.nonclock + 0.3, labels = x.label, cex = 0.7)
# now plot 14 pairs into one graph
library(RColorBrewer)
# install.packages("RColorBrewer")
dot.colors <- brewer.pal(7, "Set1")
#dot.colors <- palette()
target.mat.list <- c("MG94_nonclock_summary", "Dir_MG94_nonclock_summary", "Dir_gBGC_MG94_nonclock_summary")
for (j in 1:3){
target.mat <- get(target.mat.list[j])
y.max <- max(target.mat[(21 + j):(32 + j), filtered.pairs])
for (i in 1:7){
plot(x, target.mat[(21 + j):(32 + j), filtered.pairs[2 * i - 1]], col = dot.colors[i], type = "b", pch = 20, ylim = c(0.0, y.max),
ylab = "posterior tau estimate", main = gsub("_summary", "", target.mat.list[j]), xlab = "edges")
par(new = TRUE)
plot(x, target.mat[(21 + j):(32 + j), filtered.pairs[2 * i]], col = dot.colors[i], type = "o", lty = 2, pch = 22, ylim = c(0.0, y.max),
ylab = "posterior tau estimate", main = gsub("_summary", "", target.mat.list[j]), xlab = "edges")
par(new = TRUE)
}
par(new = FALSE)
}
# Chunk 10
# now plot 14 pairs into one graph
library(RColorBrewer)
# install.packages("RColorBrewer")
dot.colors <- brewer.pal(7, "Set1")
all.ratio <- MG94_nonclock_summary[34:45, filtered.pairs] / MG94_nonclock_summary[46:57, filtered.pairs]
all.ratio[is.nan(all.ratio)] <- 0.0
y.max <- max(all.ratio)
for (i in 1:7){
ratio.single.pair <- MG94_nonclock_summary[34:45, filtered.pairs[2 * i - 1]] / MG94_nonclock_summary[46:57, filtered.pairs[2 * i - 1]]
ratio.single.pair[is.nan(ratio.single.pair)] <- 0.0  # replace NAN with 0.0
plot(x, ratio.single.pair, col = dot.colors[i], type = "b", pch = 20, ylim = c(0.0, y.max),
ylab = "posterior tau estimate", main = "MG94 nonclock", xlab = "edges")
par(new = TRUE)
ratio.single.pair <- MG94_nonclock_summary[34:45, filtered.pairs[2 * i]] / MG94_nonclock_summary[46:57, filtered.pairs[2 * i]]
ratio.single.pair[is.nan(ratio.single.pair)] <- 0.0  # replace NAN with 0.0
plot(x, ratio.single.pair, col = dot.colors[i], type = "o", lty = 2, pch = 22, ylim = c(0.0, y.max),
ylab = "posterior tau estimate", main = "MG94 nonclock", xlab = "edges")
par(new = TRUE)
}
par(new = FALSE)
for (i in 1:length(filtered.pairs)){
#attach(mtcars)
par(mfrow = c(1, 2))
ratio.single.pair <- MG94_nonclock_summary[34:45, filtered.pairs[i]] / MG94_nonclock_summary[46:57, filtered.pairs[i]]
ratio.single.pair[is.nan(ratio.single.pair)] <- 0.0  # replace NAN with 0.0
plot(x, ratio.single.pair, col = dot.colors[1], type = "b", pch = 20, ylim = c(0.0, y.max),
ylab = "ratio of posterior expected number of directional IGC", main = "non-directional", xlab = "edges")
ratio.single.pair <- Dir_MG94_nonclock_summary[35:46, filtered.pairs[i]] / Dir_MG94_nonclock_summary[47:58, filtered.pairs[i]]
ratio.single.pair[is.nan(ratio.single.pair)] <- 0.0  # replace NAN with 0.0
plot(x, ratio.single.pair, col = dot.colors[1], type = "b", pch = 20, ylim = c(0.0, y.max),
ylab = "ratio of posterior expected number of directional IGC", main = "directional", xlab = "edges")
# Now show the likelihood improvement again
print(filtered.pairs[i])
print(paste("lnL increase = ", Dir_MG94_nonclock_summary[2, filtered.pairs[i]] - MG94_nonclock_summary[2, filtered.pairs[i]], sep = " "))
}
# Chunk 11
# nonclock models
# HKY
HKY_nonclock_summary[2, filtered.pairs] - Force_HKY_nonclock_summary[2, filtered.pairs]
# Dir_HKY_nonclock_summary[2, filtered.pairs] - HKY_nonclock_summary[2, filtered.pairs]
# gBGC_HKY_nonclock_summary[2, filtered.pairs] - HKY_nonclock_summary[2, filtered.pairs]
# Dir_gBGC_HKY_nonclock_summary[2, filtered.pairs] - Dir_HKY_nonclock_summary[2, filtered.pairs]
# Dir_gBGC_HKY_nonclock_summary[2, filtered.pairs] - gBGC_HKY_nonclock_summary[2, filtered.pairs]
# MG94
MG94_nonclock_summary[2, filtered.pairs] - Force_MG94_nonclock_summary[2, filtered.pairs]
# Dir_MG94_nonclock_summary[2, filtered.pairs] - MG94_nonclock_summary[2, filtered.pairs]
# gBGC_MG94_nonclock_summary[2, filtered.pairs] - MG94_nonclock_summary[2, filtered.pairs]
# Dir_gBGC_MG94_nonclock_summary[2, filtered.pairs] - Dir_MG94_nonclock_summary[2, filtered.pairs]
# Dir_gBGC_MG94_nonclock_summary[2, filtered.pairs] - gBGC_MG94_nonclock_summary[2, filtered.pairs]
# Chunk 12
# clock models
# HKY
HKY_clock_summary[2, filtered.pairs] - Force_HKY_clock_summary[2, filtered.pairs]
# Dir_HKY_clock_summary[2, filtered.pairs] - HKY_clock_summary[2, filtered.pairs]
# gBGC_HKY_clock_summary[2, filtered.pairs] - HKY_clock_summary[2, filtered.pairs]
# Dir_gBGC_HKY_clock_summary[2, filtered.pairs] - Dir_HKY_clock_summary[2, filtered.pairs]
# Dir_gBGC_HKY_clock_summary[2, filtered.pairs] - gBGC_HKY_clock_summary[2, filtered.pairs]
# MG94
MG94_clock_summary[2, filtered.pairs] - Force_MG94_clock_summary[2, filtered.pairs]
# Dir_MG94_clock_summary[2, filtered.pairs] - MG94_clock_summary[2, filtered.pairs]
# gBGC_MG94_clock_summary[2, filtered.pairs] - MG94_clock_summary[2, filtered.pairs]
# Dir_gBGC_MG94_clock_summary[2, filtered.pairs] - Dir_MG94_clock_summary[2, filtered.pairs]
# Dir_gBGC_MG94_clock_summary[2, filtered.pairs] - gBGC_MG94_clock_summary[2, filtered.pairs]
# Chunk 13
# HKY
Force_HKY_nonclock_summary[2, filtered.pairs] - Force_HKY_clock_summary[2, filtered.pairs]
HKY_nonclock_summary[2, filtered.pairs] - HKY_clock_summary[2, filtered.pairs]
# Dir_HKY_nonclock_summary[2, filtered.pairs] - Dir_HKY_clock_summary[2, filtered.pairs]
# gBGC_HKY_nonclock_summary[2, filtered.pairs] - gBGC_HKY_clock_summary[2, filtered.pairs]
# Dir_gBGC_HKY_nonclock_summary[2, filtered.pairs] - Dir_gBGC_HKY_clock_summary[2, filtered.pairs]
# MG94
Force_MG94_nonclock_summary[2, filtered.pairs] - Force_MG94_clock_summary[2, filtered.pairs]
MG94_nonclock_summary[2, filtered.pairs] - MG94_clock_summary[2, filtered.pairs]
# Dir_MG94_nonclock_summary[2, filtered.pairs] - Dir_MG94_clock_summary[2, filtered.pairs]
# gBGC_MG94_nonclock_summary[2, filtered.pairs] - gBGC_MG94_clock_summary[2, filtered.pairs]
# Dir_gBGC_MG94_nonclock_summary[2, filtered.pairs] - Dir_gBGC_MG94_clock_summary[2, filtered.pairs]
# Chunk 14
# Now construct the x axis (time from duplication node)
time.from.duplication <- MG94_nonclock_summary[10:21, ]
for (i in 1:5){
time.from.duplication[(1 + 2*i):12, ] <- sweep(time.from.duplication[(1 + 2*i):12, ], MARGIN = 2, time.from.duplication[(2 * i - 1), ], '+')
}
time.from.duplication <- time.from.duplication - 0.5 * MG94_nonclock_summary[10:21, ]
max.point <- 10.0
steps <- 100
basic.t <- (0:(steps-1)) * (max.point / steps)
par(mfrow = c(1, 1))
for (paralog in filtered.pairs){
pdiff <- read.table(paste("/Users/xji3/plotPdiff09032015/", paralog, " MG94 max ",
toString(max.point), ".0 data.txt", sep = ""))[[1]]
pdiff.basic <- pdiff[1:steps]
pdiff.geneconv <- pdiff[(steps + 1):length(pdiff)]
jpeg(filename = paste("/Users/xji3/plotPdiff09032015/", paralog, " MG94 max ",
toString(max.point), ".0 plot.jpg", sep = ""))
plot(basic.t, pdiff.basic, type = "l", col = "red", xlab = "t", ylab = "pdiff", ylim = c(0.0,1.0))
par(new = T)
plot(basic.t, pdiff.geneconv, type = "l", col = "blue", xlab = "t", ylab = "pdiff", ylim = c(0.0,1.0))
abline(v = time.from.duplication[,paralog], col = "gray60")
par(new = F)
title(paste(paralog, " MG94 max ", toString(max.point), ".0", sep = ""))
legend(x = "bottomright", legend = c("MG94", "IGC"), lty = c(1, 1),
lwd = c(2.5, 2.5), col = c("red", "blue"))
dev.off()
}
# Chunk 15
pair <- filtered.pairs[1]
for(pair in filtered.pairs){
paralog <- strsplit(pair, "_")[[1]]
line.1 <- "13     2"
line.2.pair1 <- paste("(((((cerevisiae", paralog[1], ":", toString(Force_MG94_nonclock_summary[20, pair]),
",paradoxus", paralog[1], ":", toString(Force_MG94_nonclock_summary[21, pair]),
"):", toString(Force_MG94_nonclock_summary[18, pair]),
",mikatae", paralog[1],":", toString(Force_MG94_nonclock_summary[19, pair]),
"):", toString(Force_MG94_nonclock_summary[16, pair]),
",kudriavzevii", paralog[1], ":", toString(Force_MG94_nonclock_summary[17, pair]),
"):", toString(Force_MG94_nonclock_summary[14, pair]),
",bayanus", paralog[1], ":", toString(Force_MG94_nonclock_summary[15, pair]),
"):", toString(Force_MG94_nonclock_summary[12, pair]),
",castellii", paralog[1], ":", toString(Force_MG94_nonclock_summary[13, pair]),
"):", toString(Force_MG94_nonclock_summary[10, pair]),
sep = "")
line.2.pair2 <- gsub(paralog[1], paralog[2], line.2.pair1)
line.2 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.1*Force_MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.9*Force_MG94_nonclock_summary[11, pair]),
");", sep = "")
line.3 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.2*Force_MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.8*Force_MG94_nonclock_summary[11, pair]),
");", sep = "")
tree.file.output <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_tree.newick", sep = "")
file.output.handle <- file(tree.file.output)
writeLines(c(line.1, "", line.2, "", line.3), file.output.handle)
close(file.output.handle)
seq.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_input.fasta", sep = "")
ctl.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_codeml.ctl", sep = "")
out.file <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_codeml_result.txt", sep = "")
same.ctl <- c("noisy = 9", "verbose = 1", "runmode = 0", "seqtype = 1",
"CodonFreq = 4", "estFreq = 1", "ndata = 1", "clock = 0",
"aaDist = 0", "model = 0", "NSsites = 0", "icode = 0",
"Mgene = 0", "fix_kappa = 1",
paste("kappa = ", toString(Force_MG94_nonclock_summary[7, pair]), sep = ""),
"fix_omega = 1",
paste("omega = ", toString(Force_MG94_nonclock_summary[8, pair]), sep = ""),
"fix_alpha = 1", "alpha = 0", "Malpha = 0", "ncatG = 5", "getSE = 1",
"RateAncestor = 0", "Small_Diff = 5e-7", "cleandata = 0", "fix_blength = 2",
"method = 0"
)
ctl.file.handle <- file(ctl.file)
writeLines(c(paste("seqfile = ", seq.file, sep = ""),
paste("treefile = ", tree.file.output, sep = ""),
paste("outfile =", out.file, sep = ""),
same.ctl), ctl.file.handle)
close(ctl.file.handle)
# Ouput IGC MLE tree
line.1 <- "13     2"
line.2.pair1 <- paste("(((((cerevisiae", paralog[1], ":", toString(MG94_nonclock_summary[20, pair]),
",paradoxus", paralog[1], ":", toString(MG94_nonclock_summary[21, pair]),
"):", toString(MG94_nonclock_summary[18, pair]),
",mikatae", paralog[1],":", toString(MG94_nonclock_summary[19, pair]),
"):", toString(MG94_nonclock_summary[16, pair]),
",kudriavzevii", paralog[1], ":", toString(MG94_nonclock_summary[17, pair]),
"):", toString(MG94_nonclock_summary[14, pair]),
",bayanus", paralog[1], ":", toString(MG94_nonclock_summary[15, pair]),
"):", toString(MG94_nonclock_summary[12, pair]),
",castellii", paralog[1], ":", toString(MG94_nonclock_summary[13, pair]),
"):", toString(MG94_nonclock_summary[10, pair]),
sep = "")
line.2.pair2 <- gsub(paralog[1], paralog[2], line.2.pair1)
line.2 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.05*MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.95*MG94_nonclock_summary[11, pair]),
");", sep = "")
line.3 <- paste("((", line.2.pair1, ",", line.2.pair2,
"):", toString(0.02*MG94_nonclock_summary[11, pair]),
",kluyveri",paralog[1],":", toString(0.98*MG94_nonclock_summary[11, pair]),
");", sep = "")
tree.file.output <- paste("/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/output/", pair, "/", pair, "_MG94_nonclock_tree.tree", sep = "")
file.output.handle <- file(tree.file.output)
writeLines(c(line.1, "", line.2, "", line.3), file.output.handle)
close(file.output.handle)
}
paml.summary.file <- "/Users/xji3/GitFolders/JGT_MBE_2016/PAMLCheck/paml_summary.txt"
all <- readLines(paml.summary.file, n = -1)
col.names <- strsplit(all[1], ' ')[[1]][-1]
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
paml_mat <- as.matrix(read.table(paml.summary.file,
row.names = row.names,
col.names = col.names))
Force.lnL.compare <- cbind(paml_mat[2, ], Force_MG94_nonclock_summary["ll", filtered.pairs])
colnames(Force.lnL.compare) <- c("paml_lnL", "IGC_lnL tau = 0")
Force.lnL.compare
MG94_nonclock_summary["ll", ]
MG94_nonclock_summary["ll", "YER102W_YBL072C"]
MG94_nonclock_summary["tau", "YER102W_YBL072C"]
filtered.pairs
MG94_nonclock_summary["ll", filtered.pairs]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Code/")
finished.pairs <- readLines('../Filtered_pairs.txt')
read.summary.mat <- function(summary_file, col_names){
all <- readLines(summary_file, n = -1)
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col_names))
return (summary_mat)
}
for(dim in 1:2){
JS.HKY.nonclock.summary <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.nonclock.summary <- NULL
PSJS.HKY.rv.SCOK.nonclock.summary <- NULL
PSJS.HKY.rv.NOSC.nonclock.summary <- NULL
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.nonclock.summary <- cbind(JS.HKY.nonclock.summary, summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.nonclock.summary <- cbind(PSJS.HKY.nonclock.summary, summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.SCOK.nonclock.summary <- cbind(PSJS.HKY.rv.SCOK.nonclock.summary, summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.NOSC.nonclock.summary <- cbind(PSJS.HKY.rv.NOSC.nonclock.summary, summary_mat)
}
assign(paste("PSJS.HKY.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.nonclock.summary)
assign(paste("PSJS.HKY.rv.SCOK.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.SCOK.nonclock.summary)
assign(paste("PSJS.HKY.rv.NOSC.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.NOSC.nonclock.summary)
}
# Now read in lnL summary
for(dim in 1:2){
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_NOSC_nonclock_lnL", sep = "_"), summary_mat)
}
}
finished.pairs
PSJS.HKY.dim.1.nonclock.summary["tract_length"]
PSJS.HKY.dim.1.nonclock.summary["tract_length",]
PSJS.HKY.rv.SCOK.dim.1.nonclock.summary["tract_length", ]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
finished.pairs <- readLines('../Filtered_pairs.txt')
filtered.pairs <- readLines('../Filtered_pairs.txt')
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
filtered.pairs[1]
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt"))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = ""))
}
lnL.ratio
View(lnL.ratio)
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = ""))
plot(lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
}
plot(1:length(lnL.ratio), lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
length(lnL.ratio).
length(lnL.ratio)
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
plot(1:length(lnL.ratio), lnL.ratio, main = paste(paralog, " HMM log posterior ratio"))
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
length(lnL.ratio)
View(lnL.ratio)
size(lnL.ratio)
dim(lnL.ratio)
plot(lnL.ratio[, 1], main = paste(paralog, " HMM log posterior ratio"))
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
line(1:dim(Viterbi.path)[1], Viterbi.path[, 1])
}
Viterbi.path
plot(lnL.ratio[, 1], type = "l",
main = paste(paralog, " HMM log posterior ratio"))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1])
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
}
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/HMMTract/")
filtered.pairs <- readLines('../Filtered_pairs.txt')
for (paralog in filtered.pairs){
lnL.ratio <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_log_posterior_ratio.txt", sep = "")))
Viterbi.path <- as.vector(read.table(paste("./summary/", paralog, "_MG94_nonclock_HMM_Viterbi_path.txt", sep = "")))
print(paralog)
plot(lnL.ratio[, 1], type = "l", col = "black",
main = paste(paralog, " HMM log posterior ratio"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], col = "blue")
}
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
View(summary.mat)
View(summary.mat)
summary.mat <- read.table("./HMM_tract_MG94_nonclock_summary.txt")
rownames(summary.mat) <- filtered.pairs
colnames(summary.mat) <- c("lnL", "max lnL", "tract length", "Pr(S_0)", "Pr(S_1)")
View(summary.mat)
summary.mat[paralog, ]
plot(lnL.ratio[, 1], type = "l", col = "black", lty = 1,
main = paste(paralog, " HMM result"),
ylim = c(min(-0.5, min(lnL.ratio)), max(lnL.ratio)))
lines(1:dim(Viterbi.path)[1], Viterbi.path[, 1], lty = 2, col = "blue")
legend(1, max(lnL.ratio), legend = c("log posterior ratio", "Viterbi path"),
lty = c(1, 2), col = c("black", "blue"))
print(summary.mat[paralog, ])
