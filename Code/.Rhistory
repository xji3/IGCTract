pair <- "YER074W_YIL069C"
pair <- "YBL087C_YER117W"
dim <- 1
library(fields)
for (pair in finished.pairs[-6]){
for (dim in 1:2){
# JS.lnL <- get(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"))
# row.lnL <- JS.lnL[, 2] %*% matrix(1, 1, dim(JS.lnL)[1])
# col.lnL <- t(row.lnL)
# JS.mat <- row.lnL + col.lnL
#
# PSJS.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"))
# PSJS.mat <- matrix(0, dim(JS.lnL)[1], dim(JS.lnL)[1])
# for(i in 1:dim(PSJS.lnL)[1]){
#   PSJS.mat[PSJS.lnL[i, 1] + 1, PSJS.lnL[i, 2] + 1] <- PSJS.lnL[i, 3]
# }
# PSJS.mat <- PSJS.mat + t(PSJS.mat)
#
# diff.lnL.mat <- PSJS.mat - JS.mat
# image.plot(1:dim(PSJS.mat)[1], 1:dim(PSJS.mat)[2], diff.lnL.mat, breaks = quantile(diff.lnL.mat))
# breaks <- c(0:20 * max(diff.lnL.mat) / 20, 0:19 * (-min(diff.lnL.mat) / 20) + min(diff.lnL.mat))
# hist(diff.lnL.mat, breaks = breaks)
# Now PSJS RV SCOK model
JS.rv.lnL <- get(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"))
row.lnL <- JS.rv.lnL[, 2] %*% matrix(1, 1, dim(JS.rv.lnL)[1])
col.lnL <- t(row.lnL)
JS.rv.mat <- row.lnL + col.lnL
diag(JS.rv.mat) <- 0.0
PSJS.rv.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"))
PSJS.rv.mat <- matrix(0, dim(JS.rv.lnL)[1], dim(JS.rv.lnL)[1])
for(i in 1:dim(PSJS.rv.lnL)[1]){
PSJS.rv.mat[PSJS.rv.lnL[i, 1] + 1, PSJS.rv.lnL[i, 2] + 1] <- PSJS.rv.lnL[i, 3]
}
PSJS.rv.mat <- PSJS.rv.mat + t(PSJS.rv.mat)
diff.lnL.mat <- PSJS.rv.mat - JS.rv.mat
to.plot.mat <- diff.lnL.mat
to.plot.mat[to.plot.mat < 0.01] <- 0
# brk = quantile( c(diff.lnL.mat), c(0., 0.98, 1.0))
# #lab.brk = paste(names(brk), round(brk, digits = 2), sep = ":")
# lab.brk = names(brk)
# tract.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["tract_length", pair]
# lnL.threshold <- 1.0 / tract.length * 2
gene.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["length", pair]
lnL.threshold <- 1.0 / (gene.length - 1) * 2
if(lnL.threshold > max(diff.lnL.mat)){
brk = quantile( c(diff.lnL.mat), c(0., 0.99, 1.0))
}else{
brk = c(min(diff.lnL.mat), lnL.threshold, max(diff.lnL.mat))
}
Fn <- ecdf(diff.lnL.mat)
lab.brk = c("0%", paste(toString(round(Fn(lnL.threshold) * 100, digits = 4)), "%", sep = ""), "100%")
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
print(brk)
#hist(diff.lnL.mat)
#write.table(diff.lnL.mat, paste("./", pair, "_matlab_test.txt", sep = ""), row.names = FALSE, col.names = FALSE, sep = "\t")
}
}
View(JS.HKY.nonclock.summary)
JS.HKY.nonclock.summary["length", ]
# Chunk 1: setup
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Code/")
finished.pairs <- readLines('../Filtered_pairs.txt')
read.summary.mat <- function(summary_file, col_names){
all <- readLines(summary_file, n = -1)
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col_names))
return (summary_mat)
}
for(dim in 1:2){
JS.HKY.nonclock.summary <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.nonclock.summary <- NULL
PSJS.HKY.rv.SCOK.nonclock.summary <- NULL
PSJS.HKY.rv.NOSC.nonclock.summary <- NULL
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.nonclock.summary <- cbind(JS.HKY.nonclock.summary, summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.nonclock.summary <- cbind(PSJS.HKY.nonclock.summary, summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.SCOK.nonclock.summary <- cbind(PSJS.HKY.rv.SCOK.nonclock.summary, summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.NOSC.nonclock.summary <- cbind(PSJS.HKY.rv.NOSC.nonclock.summary, summary_mat)
}
assign(paste("PSJS.HKY.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.nonclock.summary)
assign(paste("PSJS.HKY.rv.SCOK.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.SCOK.nonclock.summary)
assign(paste("PSJS.HKY.rv.NOSC.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.NOSC.nonclock.summary)
}
# Now read in lnL summary
for(dim in 1:2){
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_NOSC_nonclock_lnL", sep = "_"), summary_mat)
}
}
# Chunk 2
# Estimated Tract length (unit: nucleotide)
seq.length <- JS.HKY.nonclock.summary["length", ]
PSJS.HKY.dim.1.nonclock.eff.lnL <- PSJS.HKY.dim.1.nonclock.summary["ll", ] / (seq.length - 1)
PSJS.HKY.dim.2.nonclock.eff.lnL <- PSJS.HKY.dim.2.nonclock.summary["ll", ] / (seq.length - 1)
PSJS.HKY.rv.NOSC.dim.1.nonclock.eff.lnL <- PSJS.HKY.rv.NOSC.dim.1.nonclock.summary["ll", ]/ (seq.length - 3)
PSJS.HKY.rv.NOSC.dim.2.nonclock.eff.lnL <- PSJS.HKY.rv.NOSC.dim.2.nonclock.summary["ll", ]/ (seq.length - 3)
PSJS.HKY.rv.SCOK.dim.1.nonclock.eff.lnL <- PSJS.HKY.rv.SCOK.dim.1.nonclock.summary["ll", ]/ (seq.length - 1)
PSJS.HKY.rv.SCOK.dim.2.nonclock.eff.lnL <- PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["ll", ]/ (seq.length - 1)
show.mat <- rbind(PSJS.HKY.dim.1.nonclock.summary["tract_length", ],
PSJS.HKY.dim.2.nonclock.summary["tract_length", ],
PSJS.HKY.dim.1.nonclock.eff.lnL - PSJS.HKY.dim.2.nonclock.eff.lnL,
PSJS.HKY.rv.NOSC.dim.1.nonclock.summary["tract_length",],
PSJS.HKY.rv.NOSC.dim.2.nonclock.summary["tract_length",],
PSJS.HKY.rv.NOSC.dim.1.nonclock.eff.lnL - PSJS.HKY.rv.NOSC.dim.2.nonclock.eff.lnL,
PSJS.HKY.rv.SCOK.dim.1.nonclock.summary["tract_length",],
PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["tract_length",],
PSJS.HKY.rv.SCOK.dim.1.nonclock.eff.lnL - PSJS.HKY.rv.SCOK.dim.2.nonclock.eff.lnL
)
row.names(show.mat) <- c("Homo D1", "Homo D2", "lnL (D1 - D2)" ,
"Heter NOSC D1", "Heter NOSC D2", "lnL (D1 - D2)",
"Heter SCOK D1", "Heter SCOK D2", "lnL (D1 - D2)"
)
show.mat
# Now show equivalent lnL matrix
show.mat <- rbind(JS.HKY.nonclock.summary["ll", ],
PSJS.HKY.dim.1.nonclock.eff.lnL, PSJS.HKY.dim.2.nonclock.eff.lnL,
JS.HKY.rv.nonclock.summary["ll", ],
PSJS.HKY.rv.NOSC.dim.1.nonclock.eff.lnL, PSJS.HKY.rv.NOSC.dim.2.nonclock.eff.lnL,
PSJS.HKY.rv.SCOK.dim.1.nonclock.eff.lnL, PSJS.HKY.rv.SCOK.dim.1.nonclock.eff.lnL)
row.names(show.mat) <- c("Homo JS", "Homo PSJS D1", "Homo PSJS D2",
"Heter JS",
"Heter NOSC D1", "Heter NOSC D2", "Heter SCOK D1", "Heter SCOK D2")
show.mat
# Compare estimated Tau value
# Estimated Tract length (unit: nucleotide)
show.mat <- rbind(
JS.HKY.nonclock.summary["Tau",],
PSJS.HKY.dim.2.nonclock.summary["tract_length", ] * PSJS.HKY.dim.2.nonclock.summary["init_rate",],
JS.HKY.rv.nonclock.summary["Tau",] * 3.0 / colSums(rbind(1, JS.HKY.rv.nonclock.summary[c("r2", "r3"),])),
(PSJS.HKY.rv.NOSC.dim.2.nonclock.summary["tract_length",] * PSJS.HKY.rv.NOSC.dim.2.nonclock.summary["init_rate", ]
* 3.0 / colSums(rbind(1,  PSJS.HKY.rv.NOSC.dim.2.nonclock.summary[c("r2", "r3"), ]))),
PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["tract_length",] * PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["init_rate", ]
* 3.0 / colSums(rbind(1, PSJS.HKY.rv.SCOK.dim.2.nonclock.summary[c("r2", "r3"), ]))
)
row.names(show.mat) <- c("Homo JS Tau", "Homo PSJS D2 Tau", "Heter JS Tau", "Heter PSJS NOSC Tau", "Heter PSJS SCOK Tau")
show.mat
# Chunk 3
pair <- "YER074W_YIL069C"
pair <- "YBL087C_YER117W"
dim <- 1
library(fields)
for (pair in finished.pairs[-6]){
for (dim in 1:2){
# JS.lnL <- get(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"))
# row.lnL <- JS.lnL[, 2] %*% matrix(1, 1, dim(JS.lnL)[1])
# col.lnL <- t(row.lnL)
# JS.mat <- row.lnL + col.lnL
#
# PSJS.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"))
# PSJS.mat <- matrix(0, dim(JS.lnL)[1], dim(JS.lnL)[1])
# for(i in 1:dim(PSJS.lnL)[1]){
#   PSJS.mat[PSJS.lnL[i, 1] + 1, PSJS.lnL[i, 2] + 1] <- PSJS.lnL[i, 3]
# }
# PSJS.mat <- PSJS.mat + t(PSJS.mat)
#
# diff.lnL.mat <- PSJS.mat - JS.mat
# image.plot(1:dim(PSJS.mat)[1], 1:dim(PSJS.mat)[2], diff.lnL.mat, breaks = quantile(diff.lnL.mat))
# breaks <- c(0:20 * max(diff.lnL.mat) / 20, 0:19 * (-min(diff.lnL.mat) / 20) + min(diff.lnL.mat))
# hist(diff.lnL.mat, breaks = breaks)
# Now PSJS RV SCOK model
JS.rv.lnL <- get(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"))
row.lnL <- JS.rv.lnL[, 2] %*% matrix(1, 1, dim(JS.rv.lnL)[1])
col.lnL <- t(row.lnL)
JS.rv.mat <- row.lnL + col.lnL
diag(JS.rv.mat) <- 0.0
PSJS.rv.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"))
PSJS.rv.mat <- matrix(0, dim(JS.rv.lnL)[1], dim(JS.rv.lnL)[1])
for(i in 1:dim(PSJS.rv.lnL)[1]){
PSJS.rv.mat[PSJS.rv.lnL[i, 1] + 1, PSJS.rv.lnL[i, 2] + 1] <- PSJS.rv.lnL[i, 3]
}
PSJS.rv.mat <- PSJS.rv.mat + t(PSJS.rv.mat)
diff.lnL.mat <- PSJS.rv.mat - JS.rv.mat
to.plot.mat <- diff.lnL.mat
to.plot.mat[to.plot.mat < 0.01] <- 0
# brk = quantile( c(diff.lnL.mat), c(0., 0.98, 1.0))
# #lab.brk = paste(names(brk), round(brk, digits = 2), sep = ":")
# lab.brk = names(brk)
# tract.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["tract_length", pair]
# lnL.threshold <- 1.0 / tract.length * 2
gene.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["length", pair]
lnL.threshold <- 1.0 / (gene.length - 1) * 2
if(lnL.threshold > max(diff.lnL.mat)){
brk = quantile( c(diff.lnL.mat), c(0., 0.99, 1.0))
}else{
brk = c(min(diff.lnL.mat), lnL.threshold, max(diff.lnL.mat))
}
Fn <- ecdf(diff.lnL.mat)
lab.brk = c("0%", paste(toString(round(Fn(lnL.threshold) * 100, digits = 4)), "%", sep = ""), "100%")
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
print(brk)
#hist(diff.lnL.mat)
#write.table(diff.lnL.mat, paste("./", pair, "_matlab_test.txt", sep = ""), row.names = FALSE, col.names = FALSE, sep = "\t")
}
}
# Chunk 4
# library("lattice")
# plot.pairs <- c("YLR333C_YGR027C", "YLR406C_YDL075W")
# plot.pairs <- finished.pairs
# # show estimated tract length
# PSJS.HKY.nonclock.summary["tract_length", plot.pairs]
# for( pair in plot.pairs){
#   print(PSJS.HKY.rv.NOSC.nonclock.summary["tract_length", pair])
#   plot.file.name <- paste("./plot/", pair, "/", pair, "_PSJS_HKY_lnL_rv_NOSC_nonclock_dim_1_offratio_0.5.txt", sep = "")
#   plot.data <- read.table(plot.file.name)
#   #plot(plot.data[, 2], plot.data[, 3], xlab = "init rate", ylab = "lnL", main = pair)
#   assign(pair, plot.data)
#
#
#
#   plot.file.name <- paste("./plot/", pair, "/", pair, "_PSJS_HKY_lnL_rv_NOSC_nonclock_dim_1_offratio_0.1_zoomed_in.txt", sep = "")
#   plot.data <- read.table(plot.file.name)
#   #plot(plot.data[, 2], plot.data[, 3], xlab = "init rate", ylab = "lnL", main = paste(pair, "_zoomed", sep = ""))
#   assign(paste(pair, ".zoomed", sep = ""), plot.data)
#
#   x <- 1:6 * 6 + 9
#   y <- 1:4 * 0.05 + 0.85
#   to.plot.mat <- get(pair)
#   z <- matrix(to.plot.mat[1 : (length(x) * length(y)), 3], nrow = length(x), ncol = length(y), byrow = TRUE)
#   wireframe(z, row.values = x, col.values = y, xlab = "tract length", ylab = "init rate", zlab = "lnL", main = pair)
#   # plot the ridge
#   plot(x, z[, 3])
# }
# Chunk 5
# Now export data
save.image(file = "/Users/xji3/Dropbox/Public/SharedWithJeff/TractSummary.RData")
View(PSJS.HKY.dim.1.nonclock.summary)
show.mat <- NULL
show.mat[, 1] <- JS.HKY.rv.nonclock.summary["ll",]
JS.HKY.rv.nonclock.summary["ll",]
show.mat[, 1] <- t(JS.HKY.rv.nonclock.summary["ll",])
show.mat
show.mat <- NULL
show.mat <- cbind(JS.HKY.rv.nonclock.summary["ll",],
PSJS.HKY.rv.SCOK.dim.2.nonclock.eff.lnL)
show.mat
show.mat <- NULL
show.mat <- cbind(JS.HKY.rv.nonclock.summary["ll",],
PSJS.HKY.rv.SCOK.dim.2.nonclock.eff.lnL,
JS.HKY.rv.nonclock.summary["Tau",] * 3.0 / colSums(rbind(1, JS.HKY.rv.nonclock.summary[c("r2", "r3"),])),
PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["tract_length",] * PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["init_rate", ]
* 3.0 / colSums(rbind(1, PSJS.HKY.rv.SCOK.dim.2.nonclock.summary[c("r2", "r3"), ])),
PSJS.HKY.rv.SCOK.dim.2.nonclock.summary["tract_length",]
)
colnames(show.mat) <- c("HKY + RV + SSJS lnL", "HKY + RV + PSJS IGC", "Tau", "Effective Tau",
"Estimated Tract Length")
show.mat
library(xtable)
xtable(show.mat)
x.rescale <- xtable(show.mat)
print(x.rescale, scalebox = 0.7)
finished.pairs
pair <- "YER074W_YIL069C"
pair <- "YBL087C_YER117W"
dim <- 1
plot.pairs <- c("YNL301C_YOL120C", "YNL069C_YIL133C")
library(fields)
#for (pair in finished.pairs[-6]){
for (pair in plot.pairs){
for (dim in 1:2){
# JS.lnL <- get(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"))
# row.lnL <- JS.lnL[, 2] %*% matrix(1, 1, dim(JS.lnL)[1])
# col.lnL <- t(row.lnL)
# JS.mat <- row.lnL + col.lnL
#
# PSJS.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"))
# PSJS.mat <- matrix(0, dim(JS.lnL)[1], dim(JS.lnL)[1])
# for(i in 1:dim(PSJS.lnL)[1]){
#   PSJS.mat[PSJS.lnL[i, 1] + 1, PSJS.lnL[i, 2] + 1] <- PSJS.lnL[i, 3]
# }
# PSJS.mat <- PSJS.mat + t(PSJS.mat)
#
# diff.lnL.mat <- PSJS.mat - JS.mat
# image.plot(1:dim(PSJS.mat)[1], 1:dim(PSJS.mat)[2], diff.lnL.mat, breaks = quantile(diff.lnL.mat))
# breaks <- c(0:20 * max(diff.lnL.mat) / 20, 0:19 * (-min(diff.lnL.mat) / 20) + min(diff.lnL.mat))
# hist(diff.lnL.mat, breaks = breaks)
# Now PSJS RV SCOK model
JS.rv.lnL <- get(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"))
row.lnL <- JS.rv.lnL[, 2] %*% matrix(1, 1, dim(JS.rv.lnL)[1])
col.lnL <- t(row.lnL)
JS.rv.mat <- row.lnL + col.lnL
diag(JS.rv.mat) <- 0.0
PSJS.rv.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"))
PSJS.rv.mat <- matrix(0, dim(JS.rv.lnL)[1], dim(JS.rv.lnL)[1])
for(i in 1:dim(PSJS.rv.lnL)[1]){
PSJS.rv.mat[PSJS.rv.lnL[i, 1] + 1, PSJS.rv.lnL[i, 2] + 1] <- PSJS.rv.lnL[i, 3]
}
PSJS.rv.mat <- PSJS.rv.mat + t(PSJS.rv.mat)
diff.lnL.mat <- PSJS.rv.mat - JS.rv.mat
to.plot.mat <- diff.lnL.mat
to.plot.mat[to.plot.mat < 0.01] <- 0
# brk = quantile( c(diff.lnL.mat), c(0., 0.98, 1.0))
# #lab.brk = paste(names(brk), round(brk, digits = 2), sep = ":")
# lab.brk = names(brk)
# tract.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["tract_length", pair]
# lnL.threshold <- 1.0 / tract.length * 2
gene.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["length", pair]
lnL.threshold <- 1.0 / (gene.length - 1) * 2
if(lnL.threshold > max(diff.lnL.mat)){
brk = quantile( c(diff.lnL.mat), c(0., 0.99, 1.0))
}else{
brk = c(min(diff.lnL.mat), lnL.threshold, max(diff.lnL.mat))
}
Fn <- ecdf(diff.lnL.mat)
lab.brk = c("0%", paste(toString(round(Fn(lnL.threshold) * 100, digits = 4)), "%", sep = ""), "100%")
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
print(brk)
#hist(diff.lnL.mat)
#write.table(diff.lnL.mat, paste("./", pair, "_matlab_test.txt", sep = ""), row.names = FALSE, col.names = FALSE, sep = "\t")
}
}
pdf(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK.pdf", sep = "_"))
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
pdf(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK.pdf", sep = "_"))
pdf(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK.pdf", sep = "_"))
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
dev.off()
pair <- "YER074W_YIL069C"
pair <- "YBL087C_YER117W"
dim <- 1
plot.pairs <- c("YNL301C_YOL120C", "YNL069C_YIL133C")
library(fields)
#for (pair in finished.pairs[-6]){
for (pair in plot.pairs){
for (dim in 1:2){
# JS.lnL <- get(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"))
# row.lnL <- JS.lnL[, 2] %*% matrix(1, 1, dim(JS.lnL)[1])
# col.lnL <- t(row.lnL)
# JS.mat <- row.lnL + col.lnL
#
# PSJS.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"))
# PSJS.mat <- matrix(0, dim(JS.lnL)[1], dim(JS.lnL)[1])
# for(i in 1:dim(PSJS.lnL)[1]){
#   PSJS.mat[PSJS.lnL[i, 1] + 1, PSJS.lnL[i, 2] + 1] <- PSJS.lnL[i, 3]
# }
# PSJS.mat <- PSJS.mat + t(PSJS.mat)
#
# diff.lnL.mat <- PSJS.mat - JS.mat
# image.plot(1:dim(PSJS.mat)[1], 1:dim(PSJS.mat)[2], diff.lnL.mat, breaks = quantile(diff.lnL.mat))
# breaks <- c(0:20 * max(diff.lnL.mat) / 20, 0:19 * (-min(diff.lnL.mat) / 20) + min(diff.lnL.mat))
# hist(diff.lnL.mat, breaks = breaks)
# Now PSJS RV SCOK model
JS.rv.lnL <- get(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"))
row.lnL <- JS.rv.lnL[, 2] %*% matrix(1, 1, dim(JS.rv.lnL)[1])
col.lnL <- t(row.lnL)
JS.rv.mat <- row.lnL + col.lnL
diag(JS.rv.mat) <- 0.0
PSJS.rv.lnL <- get(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"))
PSJS.rv.mat <- matrix(0, dim(JS.rv.lnL)[1], dim(JS.rv.lnL)[1])
for(i in 1:dim(PSJS.rv.lnL)[1]){
PSJS.rv.mat[PSJS.rv.lnL[i, 1] + 1, PSJS.rv.lnL[i, 2] + 1] <- PSJS.rv.lnL[i, 3]
}
PSJS.rv.mat <- PSJS.rv.mat + t(PSJS.rv.mat)
diff.lnL.mat <- PSJS.rv.mat - JS.rv.mat
to.plot.mat <- diff.lnL.mat
to.plot.mat[to.plot.mat < 0.01] <- 0
# brk = quantile( c(diff.lnL.mat), c(0., 0.98, 1.0))
# #lab.brk = paste(names(brk), round(brk, digits = 2), sep = ":")
# lab.brk = names(brk)
# tract.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["tract_length", pair]
# lnL.threshold <- 1.0 / tract.length * 2
gene.length <- get(paste("PSJS.HKY.dim.", toString(dim), ".nonclock.summary", sep = ""))["length", pair]
lnL.threshold <- 1.0 / (gene.length - 1) * 2
if(lnL.threshold > max(diff.lnL.mat)){
brk = quantile( c(diff.lnL.mat), c(0., 0.99, 1.0))
}else{
brk = c(min(diff.lnL.mat), lnL.threshold, max(diff.lnL.mat))
}
Fn <- ecdf(diff.lnL.mat)
lab.brk = c("0%", paste(toString(round(Fn(lnL.threshold) * 100, digits = 4)), "%", sep = ""), "100%")
#pdf(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK.pdf", sep = "_"))
image.plot(1:dim(PSJS.rv.mat)[1], 1:dim(PSJS.rv.mat)[2], diff.lnL.mat, breaks = brk, col = rainbow(2),
lab.breaks = lab.brk, main = paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK", sep = "_"))
#dev.off()
print(brk)
#hist(diff.lnL.mat)
#write.table(diff.lnL.mat, paste("./", pair, "_matlab_test.txt", sep = ""), row.names = FALSE, col.names = FALSE, sep = "\t")
}
}
rm(list=ls())  # clean up workspace
setwd("/Users/xji3/GitFolders/YeastIGCTract/Code/")
finished.pairs <- readLines('../Filtered_pairs.txt')
read.summary.mat <- function(summary_file, col_names){
all <- readLines(summary_file, n = -1)
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col_names))
return (summary_mat)
}
for(dim in 1:2){
JS.HKY.nonclock.summary <- NULL
JS.HKY.rv.nonclock.summary <- NULL
PSJS.HKY.nonclock.summary <- NULL
PSJS.HKY.rv.SCOK.nonclock.summary <- NULL
PSJS.HKY.rv.NOSC.nonclock.summary <- NULL
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.nonclock.summary <- cbind(JS.HKY.nonclock.summary, summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
JS.HKY.rv.nonclock.summary <- cbind(JS.HKY.rv.nonclock.summary, summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.nonclock.summary <- cbind(PSJS.HKY.nonclock.summary, summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.SCOK.nonclock.summary <- cbind(PSJS.HKY.rv.SCOK.nonclock.summary, summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.summary.mat(summary_file, pair)
PSJS.HKY.rv.NOSC.nonclock.summary <- cbind(PSJS.HKY.rv.NOSC.nonclock.summary, summary_mat)
}
assign(paste("PSJS.HKY.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.nonclock.summary)
assign(paste("PSJS.HKY.rv.SCOK.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.SCOK.nonclock.summary)
assign(paste("PSJS.HKY.rv.NOSC.dim", toString(dim), "nonclock.summary", sep = "."), PSJS.HKY.rv.NOSC.nonclock.summary)
}
# Now read in lnL summary
for(dim in 1:2){
for(pair in finished.pairs){
# read in JS model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in JS Rate Heterogeneous model estimates
summary.file.name <- paste("JS_HKY", pair, "One_rate_rv_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site", "lnL"))
assign(paste(pair, "JS_HKY_rv_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_SCOK_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_SCOK_nonclock_lnL", sep = "_"), summary_mat)
# read in PSJS rate variation not allow same codon dimensional search estimates
summary.file.name <- paste("PSJS_dim" , toString(dim), "HKY", pair, "One_rate_init_30.0_rv_NOSC_nonclock_lnL_summary.txt", sep = "_")
summary_file <- paste("./summary/", summary.file.name, sep = "")
summary_mat <- read.table(summary_file, col.names = c("site1", "site2", "lnL"))
assign(paste(pair, "PSJS_dim", toString(dim), "HKY_rv_NOSC_nonclock_lnL", sep = "_"), summary_mat)
}
}
View(JS.HKY.rv.nonclock.summary)
JS.HKY.nonclock.summary["length", ]
